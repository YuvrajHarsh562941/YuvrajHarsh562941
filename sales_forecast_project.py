# -*- coding: utf-8 -*-
"""Sales Forecast Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F5E5Cp_d3yjGJa5ro0A7DShBE4x5Q95N
"""

from google.colab import drive
drive .mount('/content/drive')

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px


data= pd.read_csv('/content/drive/MyDrive/walmart-sales-dataset-of-45stores.csv')
data.head()

missing_values_percentage = (data.isnull().sum() / data.shape[0]) * 100
missing_values_percentage

from sklearn.preprocessing import  LabelEncoder
encoder = LabelEncoder()
data['Date'] = encoder.fit_transform(data['Date'])

y=data.Weekly_Sales

y.describe()

date_sales=pd.DataFrame(data.groupby('Date')['Weekly_Sales'].sum()).reset_index()
date_sales['cumulative']=date_sales['Weekly_Sales'].cumsum()
px.histogram(date_sales,x='Date',y='Weekly_Sales')

px.line(date_sales,x='Date',y='cumulative')

data["Date"]=pd.to_datetime(data['Date'])
data['Month']=data['Date'].dt.month
data['Year']=data['Date'].dt.year
data.head()

fig=data.groupby(['Year'])['Weekly_Sales'].mean().plot(kind='bar',color=['green'])
fig.set_xlabel("Year")
fig.set_title("Sales per year")

fig.set_xticklabels(fig.get_xticklabels(), rotation=20)

fig=data.groupby(['Month'])['Weekly_Sales'].mean().plot(kind='bar',color=['green'])
fig.set_xlabel("Month")
fig.set_title("Sales per Monthes")
fig.set_xticklabels(fig.get_xticklabels(), rotation=20)

def month_to_season(month):
    if month in [12,1,2]:
        return 'winter'
    if month in [3,4,5]:
        return 'spring'
    if month in [6,7,8]:
        return 'summer'
    return 'Fall'

data['Season']=data['Month'].apply(month_to_season)

data=data.drop(columns=['Date'],axis=1)
data.head()

fig=data.groupby(['Season'])['Weekly_Sales'].mean().plot(kind='bar',color='green',)
fig.set_title("Weekly_Sales Per seasons")
fig.set_ylabel("Sales")

cols=['Weekly_Sales','Temperature','Fuel_Price','CPI','Unemployment']

fig,ax=plt.subplots(2,5,figsize=(20,4))
for idx,col in enumerate(cols):

    sns.histplot(data=data,x=col,ax=ax[0][idx])
    ax[0][idx].set_title(col)

for idx,col in enumerate(cols):
    sns.boxplot(data=data,x=col,ax=ax[1][idx],color='green')
    ax[1][idx].set_title(col)



fig.show()